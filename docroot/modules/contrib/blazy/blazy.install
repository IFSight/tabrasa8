<?php

/**
 * @file
 * Installation actions for Blazy.
 */

/**
 * Implements hook_requirements().
 */
function blazy_requirements($phase) {
  if ($phase != 'runtime') {
    return [];
  }

  $path = blazy_libraries_get_path('blazy') ?: \Drupal::root() . '/libraries/blazy';
  $exists = is_file($path . '/blazy.js');

  return [
    'blazy_library' => [
      'title'       => t('Blazy library'),
      'description' => $exists ? '' : t('The <a href=":url">Blazy library</a> should be installed at <strong>/libraries/blazy/blazy.js</strong>, or any path supported by libraries.module if installed. Check out file or folder permissions if troubled.', [':url' => 'https://github.com/dinbror/blazy']),
      'severity'    => $exists ? REQUIREMENT_OK : REQUIREMENT_ERROR,
      'value'       => $exists ? t('Installed') : t('Not installed'),
    ],
  ];
}

/**
 * Added new services blazy.oembed and blazy.entity.
 */
function blazy_update_8201() {
  // Do nothing to clear cache.
}

/**
 * Added a new argument date.formatter to blazy.admin.base service.
 */
function blazy_update_8202() {
  // Do nothing to clear cache.
}

/**
 * Added a new argument @entity.repository to blazy.manager.base service.
 */
function blazy_update_8203() {
  // Do nothing to clear cache.
}

/**
 * Added new classes: BlazyUtil, BlazyBreakpoint to declutter Blazy.
 */
function blazy_update_8204() {
  // Do nothing to clear cache.
}

/**
 * Removed deprecated or no longer in use classes, settings, etc.
 */
function blazy_update_8205() {
  $config = \Drupal::configFactory()->getEditable('blazy.settings');
  foreach (['native', 'unbreakpoints'] as $key) {
    $config->clear($key);
  }
  $config->save(TRUE);
}
