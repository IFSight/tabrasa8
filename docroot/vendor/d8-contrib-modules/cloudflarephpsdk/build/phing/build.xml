<!--
  name: build.xml
  description: The main project build file for phing operations. This file can
               be overridden with project specific configuration.
-->

<project name="cloudflaresphpsdk" default="validate:all" phingVersion="2.8.2">

    <!-- Custom task classes -->
    <includepath classpath="${project.basedir}/phingcludes"/>

    <!-- Application -->
    <property name="repo.root.relative" value="${project.basedir}/../.."/>
    <resolvepath propertyName="repo.root" file="${repo.root.relative}"/>

    <!--               -->
    <!--  Properties   -->
    <!-- ============= -->
    <property name="src"
              value="${repo.root}/src"
              override="true"/>

    <!-- Drush, Composer & Behat -->
    <property name="composer.bin" value="${repo.root}/bin"/>

    <!-- Set git properties -->
    <property name="git.branch.default" value="master" />

    <!-- Conditional properties -->
    <!-- Check for a travis branch variable -->
    <exec command="echo $TRAVIS_BRANCH"
          outputProperty="git.branch.current"
          dir="${repo.root}"
          logoutput="true"
          checkreturn="true" />

    <!-- If the variable was not set grab it from git -->
    <!-- This does not work for travis as it uses a detached head -->
    <if>
        <isfalse value="${git.branch.current}" />
        <then>
            <exec command="git rev-parse --abbrev-ref HEAD"
                  outputProperty="git.branch.current"
                  dir="${repo.root}"
                  logoutput="true"
                  checkreturn="true" />
        </then>
    </if>


    <!--               -->
    <!-- Filesets      -->
    <!-- ============= -->
    <fileset dir="${src}" id="custom.files" expandsymboliclinks="true">
        <include name="**"/>
    </fileset>


    <!--               -->
    <!-- Targets       -->
    <!-- ============= -->
    <target name="run-tests" description="Runs code validation and unit tests."
            depends="validate:all, test:all"/>

    <target name="validate:all" description="Runs code validation."
            depends="validate:lint, validate:phpcs, validate:phpmd, validate:phploc"/>

    <target name="test:all" description="Runs all tests."
            depends="test:phpunit"/>

    <target name="git-reset"
            description="Cleanup build artifacts">
        <exec command="git reset --hard"
              logoutput="true"
              passthru="true" />
    </target>



    <target name="validate:lint" description="Runs a php lint against the codebase.">
        <phplint>
            <fileset refid="custom.files"/>
        </phplint>
    </target>

    <target name="validate:phpcs"
            description="Sniffs custom code to ensure it meets standards.">

        <phpcodesniffer
                standard="${repo.root}/vendor/drupal/coder/coder_sniffer/Drupal/"
                showWarnings="true"
                haltonerror="true"
                haltonwarning="true">
            <fileset refid="custom.files"/>
            <formatter type="full" usefile="false"/>
        </phpcodesniffer>
    </target>

    <!-- Run code complexity and cleanliness checks on custom code. -->
    <target name="validate:phpmd" description="Checks custom code for complexity.">
        <phpmd rulesets="codesize,unusedcode,design">
            <fileset refid="custom.files"/>
            <formatter type="text" outfile="false" usefile="false"/>
        </phpmd>
    </target>

    <!-- Checks stats on the current code. -->
    <target name="validate:phploc" description="Checks code stats.">
        <phploc>
            <fileset refid="custom.files"/>
        </phploc>
    </target>

    <!-- Execute PHPUnit tests. -->
    <target name="test:phpunit" description="Runs units tests on src">
        <coverage-setup database="coverage.db">
            <fileset refid="custom.files"/>
        </coverage-setup>
        <phpunit bootstrap="${repo.root}/tests/bootstrap.php" configuration="${repo.root}/phpunit.xml.dist" codecoverage="true" haltonfailure="true" haltonerror="true" printsummary="true">
            <formatter type="summary" usefile="false"/>
            <batchtest>
                <fileset dir="${repo.root}/tests">
                    <include name="**"/>
                </fileset>
            </batchtest>
        </phpunit>
    </target>





</project>
